---
# Example playbook for managing dynamic user groups in Strata Cloud Manager
# This playbook demonstrates creating, updating, and managing dynamic user groups

- name: Authenticate with SCM using the auth role
  hosts: localhost
  gather_facts: no
  roles:
    - cdot65.scm.auth
  vars_files:
    - ../vault.yml

- name: Manage dynamic user group objects in SCM
  hosts: localhost
  gather_facts: no
  tasks:
    - name: Display authentication info
      debug:
        msg: "Authenticated with token: {{ scm_access_token | default('No token available!', true) | truncate(15, true, '...') }}"

    # Create test resources for demonstration
    - name: Create a test folder
      cdot65.scm.folder:
        name: "DUG-Test-Folder"
        parent: "Texas"
        scm_access_token: "{{ scm_access_token }}"
        state: present

    - name: Create a test snippet
      cdot65.scm.snippet:
        name: "DUG-Test-Snippet"
        description: "Snippet for testing dynamic user groups"
        scm_access_token: "{{ scm_access_token }}"
        state: present

    # Create folder-based dynamic user groups
    - name: Create a high-risk-users dynamic user group
      cdot65.scm.dynamic_user_group:
        name: "high-risk-users"
        description: "Users with high risk profile"
        filter: "tag.criticality.high"
        folder: "DUG-Test-Folder"
        tag:
          - "Ansible"
        scm_access_token: "{{ scm_access_token }}"
        state: present
      register: high_risk_group

    - name: Display high-risk-users group creation results
      debug:
        var: high_risk_group
        verbosity: 1

    - name: Create a marketing-users dynamic user group
      cdot65.scm.dynamic_user_group:
        name: "marketing-users"
        description: "Users from marketing department"
        filter: "tag.department.marketing"
        folder: "DUG-Test-Folder"
        tag:
          - "Ansible"
        scm_access_token: "{{ scm_access_token }}"
        state: present
      register: marketing_group

    - name: Display marketing-users group creation results
      debug:
        var: marketing_group
        verbosity: 1

    # Create snippet-based dynamic user groups
    - name: Create a contractor-users dynamic user group with complex filter
      cdot65.scm.dynamic_user_group:
        name: "contractor-users"
        description: "Active contractors with limited access"
        filter: "tag.role.contractor and tag.status.active"
        snippet: "DUG-Test-Snippet"
        scm_access_token: "{{ scm_access_token }}"
        state: present
      register: contractor_group

    - name: Display contractor-users group creation results
      debug:
        var: contractor_group
        verbosity: 1

    # Update an existing dynamic user group
    - name: Update high-risk-users with expanded filter
      cdot65.scm.dynamic_user_group:
        name: "high-risk-users"
        description: "Users with high risk profile or compromised status"
        filter: "tag.criticality.high or tag.status.compromised"
        folder: "DUG-Test-Folder"
        tag:
          - "Ansible"
        scm_access_token: "{{ scm_access_token }}"
        state: present
      register: updated_group

    - name: Display updated group results
      debug:
        msg: 
          - "Changed: {{ updated_group.changed }}"
          - "Updated filter: {{ updated_group.dynamic_user_group.filter }}"
          - "Updated tags: {{ updated_group.dynamic_user_group.tag }}"

    # Demonstrate idempotency
    - name: Verify idempotency - run the same update again
      cdot65.scm.dynamic_user_group:
        name: "high-risk-users"
        description: "Users with high risk profile or compromised status"
        filter: "tag.criticality.high or tag.status.compromised"
        folder: "DUG-Test-Folder"
        tag:
          - "Ansible"
        scm_access_token: "{{ scm_access_token }}"
        state: present
      register: idempotency_check

    - name: Verify idempotency result
      assert:
        that:
          - not idempotency_check.changed
        fail_msg: "Idempotency check failed - changes detected on identical operation"
        success_msg: "Idempotency check passed - no changes detected on identical operation"

    # Create another snippet-based dynamic user group
    - name: Create executive-users dynamic user group in snippet
      cdot65.scm.dynamic_user_group:
        name: "executive-users"
        description: "Executive team members"
        filter: "tag.role.executive"
        snippet: "DUG-Test-Snippet"
        scm_access_token: "{{ scm_access_token }}"
        state: present
      register: executive_group

    - name: Display executive-users group creation results
      debug:
        var: executive_group
        verbosity: 1

    # List all created dynamic user groups
    - name: Get all dynamic user groups in DUG-Test-Folder
      cdot65.scm.dynamic_user_group_info:
        folder: "DUG-Test-Folder"
        scm_access_token: "{{ scm_access_token }}"
      register: folder_groups

    - name: Show all dynamic user groups in folder
      debug:
        msg: "Found {{ folder_groups.dynamic_user_groups | length }} dynamic user groups in DUG-Test-Folder"

    - name: Get all dynamic user groups in DUG-Test-Snippet
      cdot65.scm.dynamic_user_group_info:
        snippet: "DUG-Test-Snippet"
        scm_access_token: "{{ scm_access_token }}"
      register: snippet_groups

    - name: Show all dynamic user groups in snippet
      debug:
        msg: "Found {{ snippet_groups.dynamic_user_groups | length }} dynamic user groups in DUG-Test-Snippet"

    # Clean up test resources
    - name: Delete all test dynamic user groups
      cdot65.scm.dynamic_user_group:
        name: "{{ item.name }}"
        folder: "{{ item.folder | default(omit) }}"
        snippet: "{{ item.snippet | default(omit) }}"
        scm_access_token: "{{ scm_access_token }}"
        state: absent
      loop:
        - { name: "high-risk-users", folder: "DUG-Test-Folder" }
        - { name: "marketing-users", folder: "DUG-Test-Folder" }
        - { name: "contractor-users", snippet: "DUG-Test-Snippet" }
        - { name: "executive-users", snippet: "DUG-Test-Snippet" }
      register: cleanup_result

    - name: Display cleanup results
      debug:
        msg: "Deleted {{ cleanup_result.results | selectattr('changed', 'equalto', true) | list | length }} dynamic user groups"

    - name: Delete the test snippet
      cdot65.scm.snippet:
        name: "DUG-Test-Snippet"
        scm_access_token: "{{ scm_access_token }}"
        state: absent

    - name: Delete the test folder
      cdot65.scm.folder:
        name: "DUG-Test-Folder"
        parent: "Texas"
        scm_access_token: "{{ scm_access_token }}"
        state: absent