---
# Example playbook for retrieving application group information from Strata Cloud Manager
# This playbook demonstrates various ways to query for application groups

- name: Authenticate with SCM using the auth role
  hosts: localhost
  gather_facts: no
  roles:
    - cdot65.scm.auth
  vars_files:
    - ../vault.yml

- name: Retrieve SCM application group information
  hosts: localhost
  gather_facts: no
  tasks:
    - name: Display authentication info
      debug:
        msg: "Authenticated with token: {{ scm_access_token | default('No token available!', true) | truncate(15, true, '...') }}"

    # First, set up some test resources for the demo
    - name: Create a test folder
      cdot65.scm.folder:
        name: "AppGroups-Info-Test"
        parent: "Texas"
        scm_access_token: "{{ scm_access_token }}"
        state: present

    - name: Create a test snippet
      cdot65.scm.snippet:
        name: "AppGroups-Info-Test-Snippet"
        description: "Snippet for testing application group info"
        scm_access_token: "{{ scm_access_token }}"
        state: present

    # Create sample static application groups
    - name: Create a static web application group
      cdot65.scm.application_group:
        name: "web-protocols"
        description: "Common web protocols"
        static_applications:
          - "http"
          - "https"
          - "http2"
        folder: "AppGroups-Info-Test"
        tag:
          - "web"
          - "protocols"
        scm_access_token: "{{ scm_access_token }}"
        state: present

    - name: Create a static email application group
      cdot65.scm.application_group:
        name: "email-protocols"
        description: "Common email protocols"
        static_applications:
          - "smtp"
          - "pop3"
          - "imap"
        folder: "AppGroups-Info-Test"
        tag:
          - "email"
          - "protocols"
        scm_access_token: "{{ scm_access_token }}"
        state: present

    # Create sample dynamic application groups
    - name: Create a dynamic application group for business applications
      cdot65.scm.application_group:
        name: "business-applications"
        description: "All business system applications"
        dynamic_filter: "'app.category.business-systems'"
        snippet: "AppGroups-Info-Test-Snippet"
        tag:
          - "business"
          - "dynamic"
        scm_access_token: "{{ scm_access_token }}"
        state: present

    - name: Create a dynamic application group for high-risk applications
      cdot65.scm.application_group:
        name: "high-risk-applications"
        description: "Applications with a high risk profile"
        dynamic_filter: "'app.risk=4' or 'app.risk=5'"
        snippet: "AppGroups-Info-Test-Snippet"
        tag:
          - "risk"
          - "dynamic"
        scm_access_token: "{{ scm_access_token }}"
        state: present

    # Now start querying for information

    # Query 1: Get all application groups in the folder
    - name: Get all application groups in the test folder
      cdot65.scm.application_group_info:
        folder: "AppGroups-Info-Test"
        scm_access_token: "{{ scm_access_token }}"
      register: folder_app_groups

    - name: Display all folder application groups
      debug:
        var: folder_app_groups.application_groups
        verbosity: 1

    - name: Show count of application groups in folder
      debug:
        msg: "Found {{ folder_app_groups.application_groups | length }} application groups in folder"

    # Query 2: Get all application groups in the snippet
    - name: Get all application groups in the test snippet
      cdot65.scm.application_group_info:
        snippet: "AppGroups-Info-Test-Snippet"
        scm_access_token: "{{ scm_access_token }}"
      register: snippet_app_groups

    - name: Display all snippet application groups
      debug:
        var: snippet_app_groups.application_groups
        verbosity: 1

    - name: Show count of application groups in snippet
      debug:
        msg: "Found {{ snippet_app_groups.application_groups | length }} application groups in snippet"

    # Query 3: Get a specific application group by name
    - name: Get web protocols group by name
      cdot65.scm.application_group_info:
        name: "web-protocols"
        folder: "AppGroups-Info-Test"
        scm_access_token: "{{ scm_access_token }}"
      register: web_group_info

    - name: Display web protocols application group
      debug:
        var: web_group_info.application_groups[0]

    # Query 4: Get all static application groups
    - name: Get all static application groups
      cdot65.scm.application_group_info:
        type: "static"
        folder: "AppGroups-Info-Test"
        scm_access_token: "{{ scm_access_token }}"
      register: static_groups

    - name: Display static application groups
      debug:
        msg: "Found {{ static_groups.application_groups | length }} static application groups"
        verbosity: 1

    # Query 5: Get all dynamic application groups
    - name: Get all dynamic application groups
      cdot65.scm.application_group_info:
        type: "dynamic"
        snippet: "AppGroups-Info-Test-Snippet"
        scm_access_token: "{{ scm_access_token }}"
      register: dynamic_groups

    - name: Display dynamic application groups
      debug:
        msg: "Found {{ dynamic_groups.application_groups | length }} dynamic application groups"
        verbosity: 1

    # Query 6: Get application groups with a specific member
    - name: Get application groups containing HTTPS
      cdot65.scm.application_group_info:
        member: "https"
        folder: "AppGroups-Info-Test"
        scm_access_token: "{{ scm_access_token }}"
      register: https_groups

    - name: Display HTTPS application groups
      debug:
        var: https_groups.application_groups
        verbosity: 1

    - name: Show count of application groups containing HTTPS
      debug:
        msg: "Found {{ https_groups.application_groups | length }} application groups containing HTTPS"

    - name: Display HTTPS application group members
      debug:
        msg: "Group members: {{ item.members | default([]) }}"
      loop: "{{ https_groups.application_groups }}"
      when: https_groups.application_groups | length > 0

    # Query 7: Get application groups with a specific tag
    - name: Get application groups with "protocols" tag
      cdot65.scm.application_group_info:
        tag: ["protocols"]
        folder: "AppGroups-Info-Test"
        scm_access_token: "{{ scm_access_token }}"
      register: protocol_groups

    - name: Display protocol application groups
      debug:
        var: protocol_groups.application_groups
        verbosity: 1

    - name: Show count of protocol application groups
      debug:
        msg: "Found {{ protocol_groups.application_groups | length }} application groups with protocols tag"

    # Query 8: Get dynamic application groups with filter pattern
    - name: Get application groups with risk filter
      cdot65.scm.application_group_info:
        filter_pattern: "app.risk"
        snippet: "AppGroups-Info-Test-Snippet"
        scm_access_token: "{{ scm_access_token }}"
      register: risk_filter_groups

    - name: Display risk filter application groups
      debug:
        var: risk_filter_groups.application_groups
        verbosity: 1

    - name: Show count of risk filter application groups
      debug:
        msg: "Found {{ risk_filter_groups.application_groups | length }} application groups with risk in the filter"

    # Clean up test resources
    - name: Delete all test application groups
      cdot65.scm.application_group:
        name: "{{ item.name }}"
        folder: "{{ item.folder | default(omit) }}"
        snippet: "{{ item.snippet | default(omit) }}"
        scm_access_token: "{{ scm_access_token }}"
        state: absent
      loop:
        - { name: "web-protocols", folder: "AppGroups-Info-Test" }
        - { name: "email-protocols", folder: "AppGroups-Info-Test" }
        - { name: "business-applications", snippet: "AppGroups-Info-Test-Snippet" }
        - { name: "high-risk-applications", snippet: "AppGroups-Info-Test-Snippet" }

    - name: Delete the test snippet
      cdot65.scm.snippet:
        name: "AppGroups-Info-Test-Snippet"
        scm_access_token: "{{ scm_access_token }}"
        state: absent

    - name: Delete the test folder
      cdot65.scm.folder:
        name: "AppGroups-Info-Test"
        parent: "Texas"
        scm_access_token: "{{ scm_access_token }}"
        state: absent